!function(){var util,child_process,logger,objAdd,insp,obtain,parseTmp,parseDate,hasContent,includes,isArray,isSolidString,isPlainObject,apL,MODULE_TITLE,throwErrNonStr;Wsh&&Wsh.AppLauncher||(Wsh.AppLauncher={},util=Wsh.Util,child_process=Wsh.ChildProcess,logger=Wsh.Logger,objAdd=Object.assign,insp=util.inspect,obtain=util.obtainPropVal,parseTmp=util.parseTemplateLiteral,parseDate=util.parseDateLiteral,hasContent=util.hasContent,includes=util.includes,isArray=util.isArray,isSolidString=util.isSolidString,isPlainObject=util.isPlainObject,apL=Wsh.AppLauncher,MODULE_TITLE="WshAppLauncher/AppLauncher.js",throwErrNonStr=function(functionName,errVal){util.throwTypeError("string",MODULE_TITLE,functionName,errVal)},apL.launchAppUsingLog=function(app,args,options){var FN="apL.launchAppUsingLog",loggerObj=obtain(options,"logger",{}),lggr=logger.create(loggerObj);lggr.info("Start the function "+FN),isSolidString(app)||throwErrNonStr(FN,app);var shell=obtain(options,"shell",!1),winStyle=obtain(options,"winStyle","activeDef"),runsAdmin=obtain(options,"runsAdmin"),isDryRun=obtain(options,"isDryRun",!1);lggr.info('app: "'+app+'"'),lggr.info("args: ["+(args||"")+"]"),lggr.info("shell: "+shell),lggr.info("winStyle: "+winStyle),lggr.info("runsAdmin: "+runsAdmin),isDryRun&&lggr.info("isDryRun: "+isDryRun);var dryLog=child_process.execFile(app,args,options);isDryRun&&lggr.info(dryLog),lggr.info("Finished the function "+FN),obtain(options,"transportsLog",!0)&&lggr.transport()},apL.launchAppsUsingSchema=function(schema,taskName,options){var functionName,errVal,FN="apL.launchAppsUsingSchema";isPlainObject(schema)||(functionName=FN,errVal=schema,util.throwTypeError("object",MODULE_TITLE,functionName,errVal)),isSolidString(taskName)||throwErrNonStr(FN,taskName);var loggerObj=obtain(options,"logger",{}),lggr=logger.create(loggerObj);lggr.info("Start function "+FN),lggr.info('taskName: "'+taskName+'"');var tasks=schema.tasks,taskNames=Object.keys(tasks),regNameMatcher=includes(taskName,"*")?new RegExp(taskName.replace(/\*/g,".*")):new RegExp(taskName),filteredNames=taskNames.filter(function(taskName){return regNameMatcher.test(taskName)});lggr.info("matched tasks: "+filteredNames.length);var vals=schema.components;hasContent(options.overwrites)&&Object.keys(vals).forEach(function(key){null===vals[key]&&Object.keys(options.overwrites).some(function(writeKey){if(key===writeKey)return vals[key]=options.overwrites[writeKey],!0})}),obtain(options,"isDryRun",!1)&&lggr.info("dry-run ["+FN+"]:"),filteredNames.forEach(function(taskName){if(lggr.info("Start the task: "+taskName),!1!==tasks[taskName].available){var app=parseDate(parseTmp(tasks[taskName].app||"",vals)),args=[];isArray(tasks[taskName].args)&&(args=tasks[taskName].args.map(function(arg){return parseDate(parseTmp(arg||"",vals))}));var shell=obtain(tasks[taskName],"shell",!1),winStyle=parseTmp(tasks[taskName].winStyle||"",vals),runsAdmin=obtain(tasks[taskName],"runsAdmin");try{apL.launchAppUsingLog(app,args,objAdd({},options,{shell:shell,winStyle:winStyle,runsAdmin:runsAdmin,logger:lggr,transportsLog:!1,"throws":!1}))}catch(e){lggr.error(insp(e))}}else lggr.info("available: false => Skip this task")}),lggr.info("Finished function "+FN),obtain(options,"transportsLog",!0)&&lggr.transport()})}();
